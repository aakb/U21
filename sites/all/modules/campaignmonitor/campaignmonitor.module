<?php

define('CM_INVALID_API_KEY', 100);

function campainmonitor_perm() {
  return array('configure campaignmonitor', 'configure campaignmonitor lists');
}

function campaignmonitor_menu() {

  $items['admin/settings/campaigns'] = array(
    'title' => 'Campaign Monitor',
    'description' => t('Settings for the simple campaign monitor intergration.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('campaignmonitor_admin_settings_form'),
    'access arguments' => array('configure campaignmonitor'),
    'file' => 'campaignmonitor.admin.inc',
  );

  $items['admin/settings/campaigns/settings'] = array(
    'title' => 'Settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['admin/settings/campaigns/lists'] = array(
    'title' => 'Lists',    
    'page callback' => 'drupal_get_form',
    'page arguments' => array('campaignmonitor_admin_lists_form'),
    'access arguments' => array('configure campaignmonitor lists'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
    'file' => 'campaignmonitor.admin.inc',
  );

  return $items;
}


function campaignmonitor_block() {
  
}

/**
 * Implementation of hook_flush_caches().
 */
function campaignmonitor_flush_caches() {
	return array('cache_campaignmonitor');
}


function _campaignmonitor_includes() {
  require_once './' . drupal_get_path('module', 'campaignmonitor') . '/includes/CMBase.inc';
}

function _campaignmonitor_get_connection($api_key) {
  _campaignmonitor_includes();
  return new CampaignMonitor($api_key);
}

function _campaignmonitor_check_connection($api_key) {
  $cm = _campaignmonitor_get_connection($api_key);
  $status = $cm->userGetSystemDate();
  if ($status['anyType']['Code'] == CM_INVALID_API_KEY) {
    return $status['anyType']['Message'];
  }
  else {
    return 1; // No error
  }
}

function _campaignmonitor_validate_client_id($api_key, $client_id) {
  $cm = _campaignmonitor_get_connection($api_key);
  $clients = $cm->userGetClients();
  foreach ($clients['anyType']['Client'] as $client) {
    if ($client['ClientID'] == $client_id) {
      return TRUE;
    }
  }
  return FALSE;
}

function _campaignmonitor_get_lists($api_key, $client_id) {
  
  $cache = cache_get('lists', 'cache_campaignmonitor');
  if ($cache)
  {
    $ret = $cache->data;
  }
  else {
    // Get lists
    $cm = _campaignmonitor_get_connection($api_key);
    $lists = $cm->clientGetLists($client_id);

    // Parse lists
    $ret = array();
    $lists = $lists['anyType']['List'];
    if (empty($lists['ListID']) && is_array($lists[0])) {
      foreach ($lists as $list) {
        $ret[$list['ListID']] = $list['Name'];
      }
    }
    else {
      $ret[$lists['ListID']] = $lists['Name'];
    }
    
    // Save it in the cache (1 hour)
    cache_set('lists', $ret, 'cache_campaignmonitor', time()+3600);
  }

  return $ret;
}