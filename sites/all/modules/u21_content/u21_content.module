<?php

/**
 * Implementation of hook_perm().
 */
function u21_content_perm() {
  return array(
    'create region',
    'edit region',
    'delete region',
  );
}

/**
 * Implementation of hook_access().
 */
function u21_content_access($op, $node, $account = NULL) {
  if ($node instanceOf stdClass) {
    $type = $node->type;
  }
  else {
    $type = $node;
  }

  $permissions = array(
    'region' => array(
      'create' => 'create region',
      'update' => 'edit region',
      'delete' => 'delete region',
    ),
  );

  if (isset($permissions[$type][$op])) {
    return user_access($permissions[$type][$op], $account);
  }
}

function u21_content_node_info() {
  return array(
    'region' => array(
      'name' => t('Region'),
      'module' => 'u21_content',
      'description' => 'Defines a region e.g Aarhus',
      'title_label' => t('Region name'),
      'body_label' => FALSE,
    ),
  );
}

/**
 * Implementation of hook_views_api() {
 */
function u21_content_views_api() {
  return array(
    'api' => 2.0,
  );
}

/**
 * Implementation of hook_ctools_plugin_api().
 */
function u21_content_ctools_plugin_api($module, $api) {
  if ($module == 'page_manager' && $api == 'pages_default') {
    return array('version' => 1);
  }
}

/**
 * Implementation of hook_ctools_plugin_directory().
 *
 * Tells CTools (and thus Panels) where to look for plugin code.
 */
function u21_content_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' || $module == 'panels') {
    return 'plugins/' . $plugin;
  }
}

/**
 * Implementation of hook_theme().
 */
function u21_content_theme($existing, $type, $theme, $path) {
  return array(
    'u21_content_region_menu' => array(
      'arguments' => array('node' => NULL),
      'template' => 'u21_content_panels_content_region_menu',
      'preprocess functions' => array('u21_content_preprocess_region_menu'),
    ),
    'u21_content_google_maps' => array(
      'arguments' => array('node' => NULL, 'width' => NULL, 'height' => NULL, 'zoom' => NULL),
      'template' => 'u21_content_panels_content_google_maps',
      'preprocess functions' => array('u21_content_preprocess_google_maps'),
    ),
    'u21_content_taxonomy_links' => array(
      'arguments' => array('node' => NULL, 'path_prefix' => NULL, 
                           'vocabulary' => NULL, 'node_type' => NULL),
      'template' => 'u21_content_panels_content_taxonomy_links',
      'preprocess functions' => array('u21_content_preprocess_taxonomy_links'),
    ),
    'u21_content_slug_links' => array(
      'arguments' => array('node' => NULL, 'node_type' => NULL, 'slug_path' => NULL, 'global_path' => NULL),
      'template' => 'u21_content_panels_content_slug_links',
      'preprocess functions' => array('u21_content_preprocess_slug_links'),
    ),
    'u21_content_event_details' => array(
      'arguments' => array('node' => NULL),
      'template' => 'u21_content_panels_content_event_details',
      'preprocess functions' => array('u21_content_preprocess_event_details'),
    ),
  );
}

/**
 * Preprocess hook for the region title and menu pane.
 */
function u21_content_preprocess_region_menu(&$variables) {
  $node = $variables['node'];

  // Set title
  $variables['title'] = t('U21 in @title', array('@title' => $node->title));

  // Load menu
  $tree = menu_tree_all_data($node->field_menu_ref[0]['value']);
  $variables['menu'] = menu_tree_output($tree);
}

/**
 * Preprocess hook for the google maps.
 */
function u21_content_preprocess_google_maps(&$variables, $hook) {
  $node = $variables['node'];
  $location = $node->location;

  $variables['title'] = check_plain($node->title);
  $variables['map'] = gmap_simple_map($location['latitude'],
                                      $location['longitude'],
                                      '',
                                      check_plain($node->title),
                                      $variables['zoom'],
                                      $variables['width'].'px',
                                      $variables['height'].'px');
}

/**
 * Preprocess hook for taxonomy link boxes.
 */
function u21_content_preprocess_taxonomy_links(&$variables, $hook) {
  if ($variables['node']) {
    $node = $variables['node'];
    $path = str_replace('%slug', $node->panels_slug, $variables['path_prefix']) .'/';
  }
  else {
    $path = $variables['path_prefix'] .'/';
  }

  $terms = array();
  $objects = taxonomy_get_tree($variables['vocabulary']);
  foreach ($objects as $term) {
    $terms[$term->tid] = array('name' => $term->name, 
                               'count' => taxonomy_term_count_nodes($term->tid, $variables['node_type']),
                               'link' => l($term->name, $path . strtolower($term->name)));
  }
  $variables['terms'] = $terms;
}

function u21_content_preprocess_slug_links(&$variables, $hook) {
  $result = db_query('SELECT s.slug, n.title 
                      FROM {panels_slug} s, {node} n
                      WHERE s.nid = n.nid
                        AND s.nodetype = n.type
                        AND s.nodetype = \'%s\'
                      ORDER BY n.title DESC', $variables['node_type']);
  $links = array(
    'all' => array(
        'title' => t('All'),
        'href' => $variables['global_path'],
      ),
    );
  while ($row = db_fetch_array($result)) {
    $links[$row['title']] = array('title' => $row['title'],
                                  'href' => str_replace('%slug', $row['slug'], $variables['slug_path']));
  }


  $variables['links'] = theme('links', $links);
}

function u21_content_preprocess_event_details(&$variables, $hook) {
  $node = $variables['node'];

  // Date/Time
  $variables['date'] = date_format_date(date_make_date($node->field_date[0]['value']), 'custom', 'd. M, Y');
  $variables['time_start'] = date_format_date(date_make_date($node->field_date[0]['value']), 'custom', 'H:i');
  $variables['time_end'] = date_format_date(date_make_date($node->field_date[0]['value2']), 'custom', 'H:i');

  // Price
  if (isset($node->field_price[0]['value']) && $node->field_price[0]['value'] > 0) {
    $variables['price'] = $node->field_price[0]['value'];
  }
  else {
    $variables['price'] = t('Free of charge');
  }

  // Address
  $variables['address_name'] = $node->location['name'];
  $variables['address_street'] = $node->location['street'];
  $variables['address_city'] = $node->location['postal_code'] .' '. $node->location['city'];
}